# https://kubernetes.io/docs/reference/config-api/kubeadm-config.v1beta3/#kubeadm-k8s-io-v1beta3-ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- token: {{--TOKEN--}}
  ttl: "1h"
  usages:
  - authentication
  - signing
nodeRegistration:
  criSocket: unix:////var/run/containerd/containerd.sock
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
certificateKey: {{--CRT_KEY--}}
localAPIEndpoint:
  advertiseAddress: {{--LOCAL_SERVER_IP--}}
  bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v1.23.0
controlPlaneEndpoint: {{--GLOBAL_SERVER_ENDPOINT--}}
clusterName: cluster.local
networking:
  dnsDomain: cluster.local
  serviceSubnet: "10.96.0.0/17"
  podSubnet: "10.96.128.0/17"
# https://coredns.io/
dns:
  imageRepository: registry.k8s.io/coredns
  imageTag: v1.8.6
# https://etcd.io/
etcd:
  local:
    imageRepository: "registry.k8s.io"
    imageTag: "3.5.1-0"
    dataDir: "/var/lib/etcd"
    # https://etcd.io/docs/v3.5/op-guide/configuration/
    # https://etcd.io/docs/v3.4/op-guide/configuration/
    extraArgs:
      wal-dir: /var/lib/etcd/wal
      grpc-keepalive-interval: 1h
      grpc-keepalive-timeout: 30s
apiServer:
  # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
  extraArgs:
    # If true, allow privileged containers. [Default: false]
    allow-privileged: "true"
    # Enables anonymous requests to the secure port of the API server. [Default: true]
    anonymous-auth: "true"
    # Ordered list of plug-ins to do authorization on secure port. [Default: Node,RBAC] 
    authorization-mode: Node,RBAC
    # Turns on aggregator routing requests to endpoints IP rather than cluster IP.
    enable-aggregator-routing: "false"
    # Enable to allow secrets of type 'bootstrap.kubernetes.io/token' in the 'kube-system' namespace
    enable-bootstrap-token-auth: "true"
    # Enable profiling via web interface [Ex: https:/10.10.10.3:6443/debug/pprof/]
    profiling: "true"
    # A port range to reserve for services with NodePort visibility
    service-node-port-range: 30000-32767
    # number for the log level verbosity
    v: "5"
  extraVolumes:
  - name: usr-share-ca-certificates
    hostPath: /var/lib/kube-apiserver/ca-cert
    mountPath: /usr/share/ca-certificates
    readOnly: true
  timeoutForControlPlane: 5m0s
controllerManager:
  # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/
  extraArgs:
    # The number of garbage collector workers that are allowed to sync concurrently. [Default: 20]
    concurrent-gc-syncs: "40"
    # The number of resource quotas that are allowed to sync concurrently. [Default: 5]
    concurrent-resource-quota-syncs: "10"
    # Enable profiling via web interface [Ex: https:/10.10.10.3:6443/debug/pprof/]
    profiling: "true"
    # number for the log level verbosity
    v: "5"
scheduler:
  # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-scheduler/
  extraArgs:
    v: "5"
---
# https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
clusterDomain: cluster.local
cgroupDriver: systemd
staticPodPath: /etc/kubernetes/manifests
# the maximum number of Pods that can run on this Kubelet. [Default: 110]
maxPods: 110
# synchronizing running containers and config. [Default: "1m"]
syncFrequency: 1m
# duration checking config files for new data. [Default: "20s"]
fileCheckFrequency: 20s
# duration checking http for new data. [Default: "20s"]
httpCheckFrequency: 20s 
# set to 0.0.0.0 for all interfaces. [Default: "0.0.0.0"]
address: "0.0.0.0"
port: 10250
# how requests to the Kubelet's server are authenticated
authentication:
  anonymous:
    # [Default: false]
    enabled: false
  webhook:
    # [Default: true]
    enabled: true
    # [Default: "2m"]  
    cacheTTL: 2m
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
# how requests to the Kubelet's server are authorized.     
authorization:
  # [Default: "Webhook"]  
  mode: Webhook
  webhook: 
    # [Default: "5m"]  
    cacheAuthorizedTTL: "5m"
    # [Default: "30s"]  
    cacheUnauthorizedTTL: "30s"
# the maximum event creations per second. [Default: 5]   
eventRecordQPS: 5
# enables log access and local running of containers
enableDebuggingHandlers: true
# enables lock contention profiling
enableContentionProfiling: true
---
# https://kubernetes.io/docs/reference/config-api/kube-proxy-config.v1alpha1/
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
# IP address for proxy server
bindAddress: "0.0.0.0"
metricsBindAddress: 127.0.0.1:10249
# Profiling handlers will be handled by metrics server.
enableProfiling: true
conntrack:
  # the maximum number of NAT connections to track per CPU core 
  maxPerCore: 0
  min: 100000
  tcpCloseWaitTimeout: 2s
  tcpEstablishedTimeout: 60s
# userspace, iptables, ipvs
mode: ipvs
iptables:
  masqueradeAll: false
  masqueradeBit: 14
  minSyncPeriod: 5s
  syncPeriod: 1m
ipvs:
  syncPeriod: 1m
  minSyncPeriod: 5s
  excludeCIDRs: []
  scheduler: rr
  strictARP: false
  tcpTimeout: 0s
  tcpFinTimeout: 0s
  udpTimeout: 0s
# Only applicable for proxyMode=userspace.
udpIdleTimeout: 250ms